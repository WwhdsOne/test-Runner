name: TestPipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ gitea.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by Gitea!"
      - run: echo "🔎 The name of your branch is ${{ gitea.ref }} and your repository is ${{ gitea.repository }}."

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: Wwhds_one/test-Pipeline
          token: wwh852456
          # 如果 Gitea 实例使用 HTTP 协议，需要设置这个选项
          fetch-depth: 0
      - run: echo "💡 The ${{ gitea.repository }} repository has been cloned to the runner."

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Update Go dependencies
        run: |
          go get -u || { echo "Failed to update Go dependencies"; exit 1; }

      - name: Tidy Go modules
        run: |
          go mod tidy || { echo "Failed to tidy Go modules"; exit 1; }

      - name: Check Docker status
        run: docker info

      - name: Build Docker image
        run: docker build -t go-testPipeline .
        # 构建 Docker 镜像，使用当前目录下的 Dockerfile

      - name: Start Docker container
        run: docker run -d --name go-testPipeline-container --network host go-testPipeline
        # 启动 Docker 容器