name: TestPipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: my-go1.24:latest  # 使用本地基础镜像
    steps:
      - name: Set up git credentials
        env:
          GITEA_USER: ${{ secrets.GITEAUSERNAME }}
          GITEA_TOKEN: ${{ secrets.GITEATOKEN }}
        run: |
          git config --global credential.helper store
          echo "https://${GITEAUSER}:${GITEATOKEN}@your-gitea-instance-url" > ~/.git-credentials
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Go dependencies
        run: go get -u

      - name: Build Go application
        run: go build -o mygo

      - name: Create and run minimal container
        run: |
          # 创建一个基于 alpine 镜像的临时容器
          TEMP_CONTAINER_ID=$(docker create alpine:latest)
          # 将二进制文件复制到临时容器中
          docker cp mygo $TEMP_CONTAINER_ID:/app/myapp
          # 提交临时容器为新镜像
          docker commit -c 'CMD ["/app/myapp"]' $TEMP_CONTAINER_ID mygo:latest
          # 启动新镜像的容器，使用 --network host 模式并后台运行
          docker run -d --network host mygo:latest