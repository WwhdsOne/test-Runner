name: TestPipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted
    container:
      image: golang:1.24-alpine
    steps:
      - name: Check out repository code
        uses: git clone https://github.com/WwhdsOne/test-runner.git

      - name: Update Go dependencies
        run: |
          cd test-Pipeline
          export GOPROXY=https://goproxy.cn,direct
          go get -u

      - name: Build Go application
        run: |
          cd test-Pipeline 
          go build -o mygo

      - name: Check for existing Docker container
        run: |
          # 检查名为mygo的容器是否正在运行
          if docker ps --filter name=mygo --format "{{.Names}}" | grep -q mygo; then
            # 如果容器正在运行，则停止并移除它
            docker stop mygo
            docker rm mygo
          fi

      - name: Check for existing Docker image
        run: |
          # 检查名为mygo的镜像是否存在
          if docker images --format "{{.Repository}}:{{.Tag}}" | grep -q "mygo:latest"; then
            # 如果镜像存在，则移除它
            docker rmi mygo:latest
          fi

      - name: Build Docker image
        run: |
          # 使用 Dockerfile 构建镜像，并指定镜像名称为mygo
          docker build -t mygo:latest .

      - name: Run Docker container
        run: |
          # 启动新镜像的容器，指定容器名称为mygo，使用 --network host 模式并后台运行
          docker run -d --network host --name mygo mygo:latest
